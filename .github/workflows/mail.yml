name: Notify by Email

on:
  release:
    types: [published]
  push:
    branches:
      - main
      - develop
      - master

jobs:
  notify:
    name: Send Email Notification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (needed for git commands)
        uses: actions/checkout@v3

      - name: Get commit messages (for push event)
        if: github.event_name == 'push'
        id: commits
        run: |
          echo "commit_messages<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s" ${{ github.event.before }}..${{ github.sha }} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Prepare email content
        id: prepare
        run: |
          # Determine recipient based on branch
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            RECIPIENT="sofiashalla96@gmail.com"
          elif [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
            RECIPIENT="sofiashalla96@gmail.com"
          elif [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            RECIPIENT="sofiashalla96@gmail.com"
          else
            RECIPIENT="sofiashalla96@gmail.com"
          fi

          echo "recipient=${RECIPIENT}" >> $GITHUB_OUTPUT

          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            SUBJECT="🚀 New Release: $GITHUB_EVENT_RELEASE_TAG_NAME"

            # Prepare URLs for release assets (adjust repo and tag dynamically)
            OWNER_REPO="${GITHUB_REPOSITORY}"
            TAG="${GITHUB_EVENT_RELEASE_TAG_NAME}"

            # Note: These file names must match what you upload in the release action
            APK_URL="https://github.com/${OWNER_REPO}/releases/download/${TAG}/app-arm64-v8a-release.apk"
            IPA_URL="https://github.com/${OWNER_REPO}/releases/download/${TAG}/app.ipa"

            BODY="A new release was published.

📦 Tag: ${TAG}
📝 Name: ${GITHUB_EVENT_RELEASE_NAME}
👤 Published by: ${GITHUB_ACTOR}
🔗 URL: ${GITHUB_EVENT_RELEASE_HTML_URL}

🧾 Notes:
${GITHUB_EVENT_RELEASE_BODY}

📎 Artifacts:
- Android APK: ${APK_URL}
- iOS IPA: ${IPA_URL}
"

            echo "subject=${SUBJECT}" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "${BODY}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

          elif [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            SUBJECT="📌 New Push to '${GITHUB_REF_NAME}'"

            COMMITS="${{ steps.commits.outputs.commit_messages }}"

            BODY="New commits were pushed to '${GITHUB_REF_NAME}'.

👤 Pushed by: ${GITHUB_ACTOR}
🔗 Compare URL: https://github.com/${GITHUB_REPOSITORY}/compare/${GITHUB_EVENT_BEFORE}...${GITHUB_SHA}

📝 Commit messages:
${COMMITS}
"

            echo "subject=${SUBJECT}" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "${BODY}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ steps.prepare.outputs.subject }}
          body: ${{ steps.prepare.outputs.body }}
          to: ${{ steps.prepare.outputs.recipient }}
          from: ${{ secrets.EMAIL_USERNAME }}
          secure: true
